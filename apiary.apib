FORMAT: 1A
HOST: http://onebox-partners-url/1.0/partners-api

# onebox-partners-api

## partners API
+ Manage a login into an external partner api
+ Get a list of events from an external partner filtered by an already logged client into that system
+ Handle to release an owned client seat from an external partner system
+ Handle to recover an owned client seat from an external partner system
+ Handle to change personal client access key from an external partner system

To do so, we have used a **API Blueprint** standard, **apiary** as an online editing and mocking tool, **aglio** to document it and **getsandbox** as a sandbox provider:
+ [API Blueprint](https://apiblueprint.org/)
+ [apiary.io](http://docs.oneboxpartnersapi.apiary.io/)
+ [getsandbox.com](http://onebox-partners-api.getsandbox.com/)
+ [aglio](https://github.com/danielgtaylor/aglio)
+ [github](https://github.com/joliva-ob/onebox-partners-api)
+ [onebox-developer](http://developer.oneboxtickets.com/partners-api/)

## OAuth2 Requests [/oauth/token]

### Oauth2 Request Access Token [POST]

You will need to use OAuth to access the API.  Write to us at api-support@oneboxtm.com.  We will give you a client ID and client secret. Use this as shown in the following call in order to retrieve a token.
Once you have a token you can use it in all API calls as shown below.

+ Request  (application/json)

        {
          "grant_type": "password",
          "client_id": [CLIENT_ID],
          "client_secret": [CLIENT_SECRET],
          "password": [YOURPASSWORD],
          "username": [YOURUSERNAME]
        }

+ Response 201 (application/json)

        {
          "access_token": "[OAUTH2_TOKEN]",
          "token_type":"bearer",
          "expires_in":7200,
          "refresh_token": "[REFRESH_TOKEN]"
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Parter events [/partners-api/1.0/partner_events?id&start_date&end_date&min_price&max_price&city_id6latitude&longitude&radius&is_seats_available&page&page_size]
List all the key data from the partners events.

See below the description of the response fields we consider that need to be explained:

| Response Field                   | Description                             |
|----------------------------------|-----------------------------------------|
| version                          | (Text) Version of the API               |
| href                             | (Text) Url of the API doc               |
| trace_id                         | (Text) unique identifier of the request |
| parameters                       | (Object) Request filtering used         |

### List all partners events [GET]

Collection of events and its session dates.

+ Request

  + Headers

            Authorization: Bearer [OAUTH2_TOKEN]
            Accept: application/json

+ Parameters
    + id (optional, string) ... Filter by given event id
    + start_date (optional, date) ... Filter by starting date ('2015-08-05T08:40:51.620Z')
    + end_date (optional, date) ... Filter by final date
    + min_price (optional, number) ... Filter from a minimum price and above.
    + max_price (optional, number) ... Filter by a maximum price and below.
    + city_id (optional, string) ... Filter by a given city id.
    + latitude (optional, number) ... It needs a longitude and radius params to search arround a GPS location.
    + longitude (optional, number) ... It needs a latitude and radius params to search arround a GPS location.
    + radius (optional, number) ... Filter by a radius applied arround a GPS location.
    + is_seats_available (optional, enum[boolean])
      Filter whether is any seat available to book or not:
        + Members
          + `true` - Filter by events with seats still available.
          + `false` - Filter by events with no seat is still available.
    + page (optional, number) ... Paginate response to point at the given page number.
    + page_size (optional, number) ... Indicate the maximum number of elements per page.

+ Response 200 (application/json)

        {
            "version": "1.0",
            "href": "http://www.oneboxtm.com/ticketing-api/1.0/events/",
            "trace_id": "94abc26e-173a-4ab2-a71b-863aed20f656",
            "request_date": "2015-08-05T08:40:51.620Z",
            "parameters":
            {
              "page": 2,
              "page_size": 20
            },
            "partners_events": [
              {
                "id": "JFSKF34K2K4",
                "event_name": "Campeonato liga LFP 15-16",
                "start_date": "2015-08-05T08:40:51.620Z",
                "end_date": "2015-08-05T08:40:51.620Z",
                "location":{
                  "country": "España",
                  "city_id": "4087",
                  "city_name": "Barcelona",
                  "zip_code": "fdjkw34-4",
                  "longitude": 34209.30,
                  "latitude": 342342.33
                },
                "venue_id": "2",
                "venue_name": "Camp Nou",
                "event_dates": [
                  {
                      "id": "12",
                      "date": "2015-08-05T08:40:51.620Z",
                      "price_id": "21",
                      "price_level_id": "454",
                      "min_price": 23.3,
                      "max_price": 50.33,
                      "seats_available": 34,
                      "links":[
                        {
                          "name": "eventdates",
                          "prompt": "Event dates",
                          "rel": "eventdates",
                          "href": "event_dates?id=12",
                          "render": "link"
                        }
                      ]
                  },
                  {
                      "id": "13",
                      "date": "2015-08-05T08:40:51.620Z",
                      "price_id": "21",
                      "price_level_id": "454",
                      "min_price": 23.3,
                      "max_price": 50.33,
                      "seats_available": 23,
                      "links":[
                        {
                          "name": "eventdates",
                          "prompt": "Event dates",
                          "rel": "eventdates",
                          "href": "event_dates?id=12",
                          "render": "link"
                        }
                      ]
                  }
                ],
              }
            ],
            "links": [
              {
                "name": "next_page",
                "prompt": "Next",
                "rel": "next",
                "href": "events?page=3&page_size=20",
                "render": "link"
              },
              {
                "name": "previous_page",
                "prompt": "Back",
                "rel": "back",
                "href": "events?page=1&page_size=20",
                "render": "link"
              }
            ]
        }

+ Response 204 (application/json)

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Login [/partners-api/1.0/login]
List all the key data for each evet date (sesión in spanish) like zones, price zone levels, available promotions and availability by zone, from a given event.

See below the description of the response fields we consider that need to be explained:

| Response Field                   | Description                             |
|----------------------------------|-----------------------------------------|
| version                          | (Text) Version of the API               |
| href                             | (Text) Url of the API doc               |
| trace_id                         | (Text) unique identifier of the request |
| parameters                       | (Object) Request filtering used         |

### Login [POST]

+ Request  (application/json)

        {
          "supplier_id": "password",
          "client_id": [CLIENT_ID],
          "client_secret": [CLIENT_SECRET]
        }

+ Response 201 (application/json)

        {
          "access_token": "[OAUTH2_TOKEN]",
          "token_type":"bearer",
          "expires_in":7200,
          "refresh_token": "[REFRESH_TOKEN]"
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }
