FORMAT: 1A
HOST: http://onebox-partners-url/1.0/partners-api

# onebox-partners-api

## partners API
+ Manage a login into an external partner api
+ Get a list of events from an external partner filtered by an already logged client into that system
+ Handle to release an owned client seat from an external partner system
+ Handle to recover an owned client seat from an external partner system
+ Handle to change personal client access key from an external partner system

To do so, we have used a **API Blueprint** standard, **apiary** as an online editing and mocking tool, **aglio** to document it and **getsandbox** as a sandbox provider:
+ [API Blueprint](https://apiblueprint.org/)
+ [apiary.io](http://docs.oneboxpartnersapi.apiary.io/)
+ [getsandbox.com](http://onebox-partners-api.getsandbox.com/)
+ [aglio](https://github.com/danielgtaylor/aglio)
+ [github](https://github.com/joliva-ob/onebox-partners-api)
+ [onebox-developer](http://developer.oneboxtickets.com/partners-api/)

## OAuth2 Requests [/oauth/token]

### Oauth2 Request Access Token [POST]

You will need to use OAuth to access the API.  Write to us at api-support@oneboxtm.com.  We will give you a client ID and client secret. Use this as shown in the following call in order to retrieve a token.
Once you have a token you can use it in all API calls as shown below.

+ Request  (application/json)

        {
          "grant_type": "password",
          "client_id": [CLIENT_ID],
          "client_secret": [CLIENT_SECRET],
          "password": [YOURPASSWORD],
          "username": [YOURUSERNAME]
        }

+ Response 201 (application/json)

        {
          "access_token": "[OAUTH2_TOKEN]",
          "token_type":"bearer",
          "expires_in":7200,
          "refresh_token": "[REFRESH_TOKEN]"
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Login [/partners-api/1.0/login]
Method to validate a user through an external partner system.

### Login [POST]

+ Request  (application/json)

        {
          "supplier_id": "avet-fcb",
          "partner_id": "3453",
          "partner_pass": "1234"
        }

+ Response 204 (application/json)

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Partner event dates [/partners-api/1.0/event_dates]
Key data from the supplier event dates by a given partner and optionally a capacity id.

See below the description of the response fields we consider that need to be explained:

| Response Field                   | Description                             |
|----------------------------------|-----------------------------------------|
| version                          | (Text) Version of the API               |
| href                             | (Text) Url of the API doc               |
| trace_id                         | (Text) unique identifier of the request |
| parameters                       | (Object) Request filtering used         |

### List all partner events [POST]

List all the key data from the supplier event dates by a given partner and optionally a capacity id.

+ Request

  + Headers

            Authorization: Bearer [OAUTH2_TOKEN]
            Accept: application/json

+ Request  (application/json)

        {
          "supplier_id": "avet-fcb",
          "partner_id": "3453",
          "partner_pass": "1234",
          "capacity_id": "25"
        }


+ Response 200 (application/json)

        {
            "version": "1.0",
            "href": "http://www.oneboxtm.com/partners-api/1.0/event_dates",
            "trace_id": "94abc26e-173a-4ab2-a71b-863aed20f656",
            "request_date": "2015-08-05T08:40:51.620Z",
            "parameters":{

            },
            "partner_id": "12345",
            "total_amount": 245.34,
            "events": [
              {
                "id": "1",
                "event_name": "Campeonato liga LFP 15-16",
                "supplier_id": "avet-fcb",
                "capacity_id": "25",
                "venue_id": "2",
                "venue_name": "Camp Nou",
                "event_dates": [
                  {
                      "id": "12",
                      "date": "2015-08-05T08:40:51.620Z",
                      "amount": 100.00,
                      "seat_available": false,
                      "links":[]
                  }
                ]
              },
              {
                "id": "2",
                "event_name": "Campeonato liga LFP 15-16",
                "supplier_id": "avet-fcb",
                "capacity_id": "25",
                "venue_id": "2",
                "venue_name": "Camp Nou",
                "event_dates": [
                  {
                      "id": "13",
                      "date": "2015-09-05T08:40:51.620Z",
                      "amount": 145.34,
                      "seat_available": true,
                      "links":[]
                  }
                ]
              }
            ],
            "links": []
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

## Partner seat availability management [/partners-api/1.0/seat_availabilities]
Method to handle with the release and recover seat management for an external supplier and a given partner and event date.

See below the description of the response fields we consider that need to be explained:

| Response Field                   | Description                             |
|----------------------------------|-----------------------------------------|
| version                          | (Text) Version of the API               |
| href                             | (Text) Url of the API doc               |
| trace_id                         | (Text) unique identifier of the request |
| parameters                       | (Object) Request filtering used         |

### Manage seat availability [POST]

Method to let the partner release or recover its seats by leaving them available to general admission sells or not.
Response is an event dates list with the resultant seats status.

+ Request

  + Headers

            Authorization: Bearer [OAUTH2_TOKEN]
            Accept: application/json

+ Request  (application/json)

        {
          "supplier_id": "avet-fcb",
          "partner_id": "3453",
          "partner_pass": "1234",
          "capacity_id": "25",
          "event_date_id": "1",
          "seat_available": true
        }


+ Response 200 (application/json)

        {
            "version": "1.0",
            "href": "http://www.oneboxtm.com/partners-api/1.0/seat_availabilities",
            "trace_id": "94abc26e-173a-4ab2-a71b-863aed20f656",
            "request_date": "2015-08-05T08:40:51.620Z",
            "parameters":{

            },
            "partner_id": "12345",
            "total_amount": 245.34,
            "events": [
              {
                "id": "1",
                "event_name": "Campeonato liga LFP 15-16",
                "supplier_id": "avet-fcb",
                "capacity_id": "25",
                "venue_id": "2",
                "venue_name": "Camp Nou",
                "event_dates": [
                  {
                      "id": "12",
                      "date": "2015-08-05T08:40:51.620Z",
                      "amount": 100.00,
                      "seat_available": false,
                      "links":[]
                  }
                ]
              },
              {
                "id": "2",
                "event_name": "Campeonato liga LFP 15-16",
                "supplier_id": "avet-fcb",
                "capacity_id": "25",
                "venue_id": "2",
                "venue_name": "Camp Nou",
                "event_dates": [
                  {
                      "id": "13",
                      "date": "2015-09-05T08:40:51.620Z",
                      "amount": 145.34,
                      "seat_available": true,
                      "links":[]
                  }
                ]
              }
            ],
            "links": []
        }

+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }

		


## Partner attributes [/partners-api/1.0/attributes]
Method to get the attributes of partner.

See below the description of the response fields we consider that need to be explained:

| Response Field                   | Description                             |
|----------------------------------|-----------------------------------------|
| version                          | (Text) Version of the API               |
| href                             | (Text) Url of the API doc               |
| trace_id                         | (Text) unique identifier of the request |
| parameters                       | (Object) Request filtering used         |

### Manage seat availability [POST]

Method to let the partner release or recover its seats by leaving them available to general admission sells or not.
Response is an event dates list with the resultant seats status.

+ Request

  + Headers

            Authorization: Bearer [OAUTH2_TOKEN]
            Accept: application/json

+ Request  (application/json)

        {
          "supplier_id": "avet-fcb",
          "partner_id": "3453",
          "partner_pass": "1234"
        }


+ Response 200 (application/json)

        {
          "supplier_id": "avet-fcb",
          "partner_id": "3453",
		  "person_id": "3453",
          "partner_pass": "1234"
		  "seat_id": "1234",
		  "row": "4",
		  "zone_id": "515",
		  "partner_type": "SUB"
        }
		
		
| Response Field Partner_type                   | Description                             |
|----------------------------------|-----------------------------------------|
| "SUB"                            | subscriber (Spanish: Abonado)  		 |
| "PAR"                            | partner   (Spanish: Socio)	             |
| "SUP "                           | supporter (Spanish): Simpatizante       |




+ Response 400 (application/json)

        {
          "error": "Bad request",
          "error_description": "There was a syntax error, check your params request and try it again."
        }

+ Response 401 (application/json)

        {
          "error": "unauthorized",
          "error_description": "Full authentication is required to access this resource"
        }
		
